<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mxblr.dao.ArticleCommentDOMapper">
  <resultMap id="BaseResultMap" type="com.mxblr.data.dataObject.ArticleCommentDO">
    <id column="comment_id" jdbcType="INTEGER" property="commentId" />
    <result column="article_id" jdbcType="INTEGER" property="articleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="site" jdbcType="VARCHAR" property="site" />
    <result column="status" jdbcType="BIT" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.mxblr.data.dataObject.ArticleCommentDO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    comment_id, article_id, name, email, site, status
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article_comment
    where comment_id = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mxblr.data.dataObject.ArticleCommentDO">
    insert into article_comment (comment_id, article_id, name, 
      email, site, status, content
      )
    values (#{commentId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{site,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mxblr.data.dataObject.ArticleCommentDO">
    insert into article_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="site != null">
        site,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentId != null">
        #{commentId,jdbcType=INTEGER},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        #{site,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mxblr.data.dataObject.ArticleCommentDO">
    update article_comment
    <set>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="site != null">
        site = #{site,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.mxblr.data.dataObject.ArticleCommentDO">
    update article_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mxblr.data.dataObject.ArticleCommentDO">
    update article_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      site = #{site,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT}
    where comment_id = #{commentId,jdbcType=INTEGER}
  </update>
</mapper>